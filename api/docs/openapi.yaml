openapi: 3.0.1
info:
  title: Swagger Petstore
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
tags:
  - name: breed
  - name: user
paths:
  /breed/create:
    post:
      tags:
        - breed
      summary: create a breed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BreedIn'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /breed/all:
    get:
      tags:
        - breed
      summary: list all breeds
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
        #                not an array
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /breed/{_id}:
    get:
      tags:
        - breed
      summary: get a breed
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
    delete:
      tags:
        - breed
      summary: delete a breed
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]

  /item/create:
    post:
      tags:
        - item
      summary: create an item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemIn'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /item/all:
    get:
      tags:
        - item
      summary: list all items
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        #                not an array
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /item/{_id}:
    get:
      tags:
        - item
      summary: get a item
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
    delete:
      tags:
        - item
      summary: delete a item
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]

  /order/create:
    post:
      tags:
        - order
      summary: create a order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderIn'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /order/all:
    get:
      tags:
        - order
      summary: list all orders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        #                not an array
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /order/{_id}:
    get:
      tags:
        - order
      summary: get a order
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
    delete:
      tags:
        - order
      summary: delete a order
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]

  /shop/create:
    post:
      tags:
        - shop
      summary: create a shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopIn'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /shop/all:
    get:
      tags:
        - shop
      summary: list all shops
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        #                not an array
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /shop/{_id}:
    get:
      tags:
        - shop
      summary: get a shop
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
    delete:
      tags:
        - shop
      summary: delete a shop
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]

  /user/create:
    post:
      tags:
        - user
      summary: create a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIn'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /user/all:
    get:
      tags:
        - user
      summary: list all users
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        #                not an array
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
  /user/{_id}:
    get:
      tags:
        - user
      summary: get a user
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]
    delete:
      tags:
        - user
      summary: delete a user
      parameters:
        - name: _id
          in: path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal error
          content: { }
      security:
        - OAuth2PasswordBearer: [ ]

  /auth/token:
    post:
      tags:
        - auth
      summary: get jwt token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                username:
                  type: string
                password:
                  type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: { }
        '500':
          description: Internal error
          content: { }
components:
  schemas:
    Breed:
      type: object
      properties:
        _id:
          type: string
        breed:
          type: string
        quantity:
          type: integer
        price:
          type: integer
        description:
          type: string
    BreedIn:
      type: object
      properties:
        breed:
          type: string
        quantity:
          type: integer
        price:
          type: integer
        description:
          type: string
    Item:
      type: object
      properties:
        _id:
          type: string
        itemName:
          type: string
        amount:
          type: integer
        price:
          type: integer
        desciption:
          type: string
    ItemIn:
      type: object
      properties:
        itemName:
          type: string
        amount:
          type: integer
        price:
          type: integer
        desciption:
          type: string
    Shop:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        addres:
          type: string
    ShopIn:
      type: object
      properties:
        name:
          type: string
        addres:
          type: string
    Order:
      type: object
      properties:
        _id:
          type: string
        user_id:
          type: string
        items:
          type: array
          items:
            type: string
        shop_id:
          type: string
    OrderIn:
      type: object
      properties:
        user_id:
          type: string
        items:
          type: array
          items:
            type: string
        shop_id:
          type: string
    UserIn:
      type: object
      properties:
        user:
          type: string
        password:
          type: string
        role:
          type: string
        email:
          type: string
    User:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
        password:
          type: string
        role:
          type: string
        email:
          type: string


  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password: { tokenUrl: auth/token }


